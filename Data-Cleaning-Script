SELECT * FROM us_household_income.ushouseholdincome;

SELECT *
FROM ushouseholdincome_statistics
;

ALTER TABLE ushouseholdincome_statistics RENAME COLUMN `ï»¿id` TO `id`;

SELECT COUNt(id)
FROM ushouseholdincome;

SELECT COUNT(id)
FROM ushouseholdincome_statistics;

# First, I am going to find the duplicates in the tables if they do.

SELECT id, COUNT(id)
FROM ushouseholdincome
GROUP BY id
HAVING COUNT(id) > 1;

# In the following query, first the row_id of the duplicates by using ROW_NUMBER() window function are identified, then by putting that query as an inner query of an outer DELETE query, we can delete the duplicates. NOTE: for applying the filtering on the ROW_number function, that query is an inner query of the outer query.

DELETE FROM ushouseholdincome
WHERE row_id IN (
SELECT row_id
FROM (SELECT row_id, id , ROW_NUMBER() OVER (PARTITION BY id ORDER BY id) AS row_num
FROM ushouseholdincome) AS row_table
WHERE row_num > 1);

# The ushouseholdincome_statistics table does not have any duplicates.

SELECT id, COUNT(id)
FROM ushouseholdincome_statistics
GROUP BY id
HAVING COUNT(id) > 1;

# In the following queries, some correction will be done about the state_name, Type column.


SELECT DISTINCT(state_name)
FROM ushouseholdincome;

UPDATE ushouseholdincome
SET state_name = 'Georgia'
WHERE state_name = 'georia'
;

UPDATE ushouseholdincome
SET state_name = 'Alabama'
WHERE state_name = 'alabama'
;

SELECT *
FROM ushouseholdincome
;

UPDATE ushouseholdincome
SET Place = 'Autaugaville'
WHERE County = 'Autauga County' AND City = 'Vinemont'
;

SELECT Type, COUNT(Type)
FROM ushouseholdincome
GROUP BY Type
;

UPDATE ushouseholdincome
SET Type = 'Borough'
WHERE Type =  'Boroughs'
;
